/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'anton' at '10/31/14 6:53 PM' with Gradle 2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

// Apply the checkstyle plugin
apply plugin: 'checkstyle'
// Apply the JaCoCo plugin
apply plugin: 'jacoco'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

sourceSets {
   selenium
   seleniumXvfb
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'com.sparkjava:spark-core:1.1.1'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'

    seleniumCompile 'junit:junit:4.11'
    seleniumCompile 'org.seleniumhq.selenium:selenium-java:2.+'

    seleniumXvfbCompile 'junit:junit:4.11' 
    seleniumXvfbCompile 'org.seleniumhq.selenium:selenium-java:2.+' 

}

mainClassName = "main.java.TicTacGame"

jar {
	manifest {
		attributes("Main-Class": "main.java.TicTacGame")
	}
}

startScripts {
    mainClassName = "main.java.TicTacGame"
}

jacoco {
    toolVersion = "0.7.2.201409121644"
    reportsDir = file("$buildDir/reports/jacocoReports")
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests"
}

task seleniumXvfb(type: Test, dependsOn: installApp) {                                                                                                                                                 
    testClassesDir = sourceSets.selenium.output.classesDir
    classpath = sourceSets.selenium.runtimeClasspath
 
 
    environment "DISPLAY", ":99"
    doFirst {
        '/usr/bin/Xvfb start'.execute()
        'build/install/late-term-assignment/bin/late-term-assignment &'.execute()
    }
    doLast {
        '/usr/bin/Xvfb stop'.execute()
    }
}
task stage { dependsOn installApp }
